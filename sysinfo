#!/bin/bash
# Use bash or zsh, sh won't work in many cases!

version_info() {
	echo "sysinfo 20140110"
	echo "Copyright (c) 2014 Malte Bublitz"
}
display_help() {
	version_info
	echo
	echo "Options:
	-V	Display version information
	-h	Display this help
Reort options
	-o	Operating System
	-r	OS Kernel
	-n	Nodename/Hostname
	-u	Uptime
	-w	Window Manager
	-m	Used/available RAM
	-e	Environment (Shell/Editor/Browser)
	-a	Display all information"
}
info_os() {
	echo -n "OS: "
	if [ -f /etc/arch-release ]; then
		echo -n "Arch Linux"
	elif [ -f /etc/lsb-release ]; then
		(
			. /etc/lsb-release
			echo -n $DISTRIB_DESCRIPTION
		)
	elif [ `uname` == "Darwin" ]; then
		echo -n "Mac OS X "
		python -c 'import platform; print platform.mac_ver()[0],' | tr -d "\n"
	fi
	echo -n " "
	uname -m
}
info_kernel() {
	echo "Kernel: `uname -sr`"
}
info_nodename() {
	echo -n "Hostname: "
	hostname -f
}
info_uptime() {
	echo -n "Uptime: "
	if [ `uname` == "Darwin" ]; then
		LC_ALL=C uptime | python -c 'import sys;l = sys.stdin.readline().split(","); print " ".join(l[:-2])' | cut -d" " -f5-
	else
		LC_ALL=C uptime | python2 -c 'import sys;l = sys.stdin.readline().split(","); print " ".join(l[:-4])' | cut -d" " -f4-
	fi
}
info_wm() {
	echo -n "WM: "
	ps x | grep "X" >/dev/null || WM="None"
	ps x | grep "awesome" >/dev/null && WM="Awesome"
	ps x | grep "SystemUIServer" >/dev/null && WM="Aqua"
	[ -z $WM ] && WM="Unknown"
	echo $WM
}
info_mem() {
	echo -n "RAM: "
	if [ `uname` == "Darwin" ]; then
		# Darwin/OS X is missing the free command, using "top" instead.
		top -l 1 | head -n 10 | grep PhysMem | cut -d"(" -f 2 | cut -d" " -f1 | cut -f1 | tr -d "M" | tr -d "\n"
		echo -n " MB / "
		{
			top -l 1 | head -n 10 | grep PhysMem | awk '{ print $2 }' | tr -d "M\n"
			echo -n "+"
			top -l 1 | head -n 10 | grep PhysMem | awk '{ print $6 }' | tr -d "M"
		} | bc | tr -d "\n"
		echo " MB"
	else
		free -m | grep buffers/cache | awk '{ print $3 "MB" }' | tr -d "\n"
		echo -n " / "
		free -m | grep ^Mem | awk '{ print $2 "MB" }'
	fi
}
info_env() {
	[ -n $SHELL ] && echo "Shell: `basename $SHELL`"
	[ -n $EDITOR ] && echo "Editor: `basename $EDITOR`"
	[ -f "$BROWSER" ] && echo "Browser: `basename $BROWSER`"
}

if [ -z "$1" ]
then
	display_help
	exit 1
fi
while getopts "Vhornuwmea" opt; do
	case $opt in
		V)
			version_info
			exit 0
			;;
		h)
			display_help
			exit 0
			;;
		o)
			info_os
			;;
		r)
			info_kernel
			;;
		n)
			info_nodename
			;;
		u)
			info_uptime
			;;
		w)
			info_wm
			;;
		m)
			info_mem
			;;
		e)
			info_env
			;;
		a)
			info_os
			info_kernel
			info_nodename
			info_uptime
			info_wm
			info_mem
			info_env
			;;
		*)
			display_help
			exit 1
			;;
	esac
done
exit 0
